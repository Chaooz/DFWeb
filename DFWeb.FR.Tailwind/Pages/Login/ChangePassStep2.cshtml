@page
@model Page
@{
    ViewData["Title"] = "Change Password";
}


<div>

    <div class="row">
        <div class="col-md-12">
            @await Html.PartialAsync("../Views/TopElements/TopMenuBasic.cshtml", Model)
        </div>
    </div>

    <div class="row">
        <div class="col-md-2"></div>

        <div class="col-md-8">

            <div class="article" style="width:100%">

                <h1> Security Code </h1>
                <div style="margin:15px;">
                    Please enter the security code received in your email.
                </div>

                <div class="articletext" style="margin:5px">
                    <form action="/api/Login/ChangePassStep2" method="POST">
                        <div id="error" class="alert alert-danger" role="alert" style="margin-top:5px; display:none; ">
                            <strong>Wrong pincode</strong>
                        </div>
                        <div>
                            <strong>Username</strong>
                            <input name="code" class="form-control" type="text" placeholder="Code" aria-label="Code">
                        </div>
                        <br>
                        <div class="buttonrow">
                            <a href="/Login/Login/ChangePassStep1" class="btn btn-secondary" >Previous</a>
                            <button class="btn btn-primary" type="submit"><i style="margin-right:5px" class="fa fa-sign-in" aria-hidden="true"></i>Next</button>
                        </div>
                    </form>
                </div>
                <br>
            </div>
        </div>

        <div class="col-md-2"></div>

    </div>
</div>

<script language="javascript">

    function parse_query_string(query) {
        var vars = query.split("&");
        var query_string = {};
        for (var i = 0; i < vars.length; i++) {
            var pair = vars[i].split("=");
            var key = decodeURIComponent(pair[0]);
            var value = decodeURIComponent(pair[1]);
            // If first entry with this name
            if (typeof query_string[key] === "undefined") {
            query_string[key] = decodeURIComponent(value);
            // If second entry with this name
            } else if (typeof query_string[key] === "string") {
            var arr = [query_string[key], decodeURIComponent(value)];
            query_string[key] = arr;
            // If third or later entry with this name
            } else {
            query_string[key].push(decodeURIComponent(value));
            }
        }
        return query_string;
    }

    function getValue( obj, keyName )
    {
        if ( obj === null || obj === undefined )
        {
            return null;
        }

        return obj[keyName];
    }

    function onInit()
    {
        var query = window.location.search.substring(1);
        var queryKvPair = parse_query_string(query);
        var error = getValue(queryKvPair,"errorId");
        switch(error)
        {
            case "PinCodeDoesNotMatch":
                var errorElement = document.getElementById("error");
                break;
            default:
                $("error").hide();
                break;
        }
    }

    onInit();
</script>
