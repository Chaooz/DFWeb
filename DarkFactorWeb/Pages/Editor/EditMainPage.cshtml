@page
@model EditMainPage
@{
    ViewData["Title"] = Model.Title;
}

@{
    var acl = new Dictionary<int, string>();
    acl[0] = "Public";
    acl[1] = "Member";
    acl[2] = "Unpublished";

    var layout = new Dictionary<int, string>();
    layout[0] = "Text Only";
    layout[1] = "Image Only";
    layout[2] = "Text Left, Image Right";
    layout[3] = "Image Left, Text Right";
}

<div>
    <div class="row" id="menu">
        <div class="col-md-12">
            @await Html.PartialAsync("/Pages/Views/TopElements/TopMenu.cshtml", Model)
        </div>
    </div>
    <div class="row" id="navigation">
        <div class="col-md-12">
            @await Html.PartialAsync("/Pages/Views/TopElements/TopNavigation.cshtml", Model)
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="article" style="column;padding:10px">
                <input type='hidden' name='ID' value='@Model.PageId'>
                <input type='hidden' name='command' value='save'>

                <div class='edit_header'>Title</div>
                <input name='Title' type='text' class='edit_input' style='padding:2px' value='@Model.Title' placeholder='Enter title'><br>

                <div class='edit_header'>Related Tags</div>
                <input name='RelatedTags' type='text' class='edit_input' value='@Model.RelatedTags'><br>
                <br>
            </div>
        </div>
        <div class="col-md-4">
            <div class="article">
                    <div class='edit_header'>Access Control</div>
                    <select name='acl' class='edit_input' style="width:75%" align="center">
                        @foreach (var aclKv in acl)
                        {
                            if ( aclKv.Key == Model.Acl )
                            {
                                <option value=@aclKv.Key selected> @aclKv.Value </option>
                            }   
                            else
                            {
                                <option value=@aclKv.Key> @aclKv.Value </option>
                            }
                        }
                    </select>
                    <input type='submit' value='Update'>
                <BR>
                @*await Html.PartialAsync("/Pages/Views/Components/ImageComponent.cshtml", Model.pageModel)*@
            </div>
        </div>

        <div class="col-md-4">
            <input class=toolbutton type='submit' value='Save Page' onClick="clickSavePage(@Model.PageId)" >
            <input class=toolbutton type='submit' value='Delete Page'>
        </div>
    </div>

    <BR>

    <div class="row" id="mainblock">
        <div class="col-lg-12 col-md-12">
            <input class=toolbutton type='submit' value='Add Article'>
        </div>
    </div>

    <BR>

    <div class="row" id="mainblock">

        <div class="col-lg-8 col-md-8">

            <div>
                @foreach (var relPage in Model.mainPageItems)
                {
                    @if ( Model.ShowEditor )
                    {
                        <div class="articleedit" style="width:100%;display:flex">
                            <form class="form-inline" style="margin-left:2px;" action="/api/Edit/MoveDown" method="POST">
                                <input type="hidden" id="pageid" name="pageid" value="@relPage.ID">
                                <button class="btn btn-sm btn-outline-primary my-2 my-sm-0" type="submit"><i class="fa fa-sort-amount-asc" aria-hidden="true"></i></button>
                            </form>
                            <form class="form-inline" style="margin-left:2px" action="/api/Edit/MoveUp" method="POST">
                                <input type="hidden" id="pageid" name="pageid" value="@relPage.ID">
                                <button class="btn btn-sm btn-outline-primary my-2 my-sm-0" type="submit"><i class="fa fa-sort-amount-desc" aria-hidden="true"></i></button>
                            </form>
                            <form class="form-inline" style="margin-left:2px" action="/api/Edit/EditPage" method="POST">
                                <input type="hidden" id="pageid" name="pageid" value="@relPage.ID">
                                <button class="btn btn-sm btn-outline-primary my-2 my-sm-0" type="submit"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></button>
                            </form>
                            <form class="form-inline" style="margin-left:2px" action="/api/Edit/Delete" method="POST">
                                <input type="hidden" id="pageid" name="pageid" value="@relPage.ID">
                                <button class="btn btn-sm btn-outline-primary my-2 my-sm-0" type="submit"><i class="fa fa-trash-o" aria-hidden="true"></i></button>
                            </form>
                        </div>
                    }

                    <div class="article" style="width:100%;display:flex">

                    <div style="width:50%;align-items:center">
                        @await Html.PartialAsync("/Pages/Views/Components/ImageComponent.cshtml", relPage)
                    </div>

                    <div class="articletext" style="width:50%;margin-left:10px;margin-right:10px">

                        @if (!string.IsNullOrEmpty(relPage.PromoTitle))
                        {
                            <a href="/page?id=@relPage.ID" class="articlesubtitle">@relPage.PromoTitle</a><br />
                            <br />
                        }

                        @relPage.PromoText
                        <br />
                        <br />

                        <a href="/page?id=@relPage.ID">Read more &gt;&gt;</a><br />
                    </div>
                </div>
                <BR>
                }
            </div>

        </div>
        <div class="col-lg-4 col-md-4">
            @await Html.PartialAsync("/Pages/Views/RightSideElements/ArticleSection.cshtml", Model.relatedPages)
        </div>
    </div>

</div>


<script type="text/javascript">

    function clickConfirmDeleteSection(pageId, sectionId)
    {
        console.log("DELETE " + pageId + " section:" + sectionId);
        clickDeleteSection(pageId,sectionId);
    }

    // Delete section
    function clickDeleteSection(pageId, sectionId)
    {
        data = {
            id:sectionId,
            pageId: pageId
        };
        postData("/api/Edit/DeleteArticleSection", data);
    }

    //
    // Save the content of the page
    //
    function clickSavePage(pageId)
    {
        var title = getFieldValue("title");

        data = {
            pageId: pageId,
            id: sectionId,
            text: content,
            sortId: sortId,
            layout: layout,
            imageId: imageId
        }

        //postData("/api/Edit/UpdateArticleSection", data);
    }

</script>